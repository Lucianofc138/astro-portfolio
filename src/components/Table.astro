---
interface Props {
    headers: string[];
    rowKeys: string[];
    rowsInfo: Record<string, any>;
}

const { headers, rowKeys, rowsInfo} = Astro.props;
---

<main>
    <table>
        <thead>
        <tr>
            {headers.map((item) => (
               <td>{item}</td>
            ))}
        </tr>
        </thead>
        <tbody>
        {rowsInfo.map((row: any, index: number) => (
                <tr class="row" data-description={row.description}>
                    <td>{index + 1}</td>
                    {rowKeys.map(k => (
                            <td>{row.hasOwnProperty(k) ? row[k] : ''}</td>
                    ))}
                </tr>
        ))}
        </tbody>
    </table>
    <section id="row-description" />
</main>
<script>
    function setDescription(text: string) {
        const descriptionSection: HTMLElement | null = document.getElementById("row-description");
        if (descriptionSection) {
            descriptionSection.innerHTML = text;
        }
    }

    function onHoverExperience(event: Event): void {
        const target = event.target as HTMLElement | null;

        if (!target) {
            return;
        }
        const description: string = target?.getAttribute('data-description') ?? "";
        const richTextDescription: string = description.replace(/\*([^*]+)\*/g, '<strong>$1</strong>');
        const textByParagraphs: string[] = richTextDescription.split("\n");
        const htmlByParagraphs: string = textByParagraphs.map(t => "<p>" + t + "</p>").join("");
        setDescription(htmlByParagraphs);
    }

    function onUnhoverExperience(): void {
        setDescription("");
    }

    const rows: NodeListOf<Element> = document.querySelectorAll(".row");

    rows.forEach((row: Element) => {
        row.addEventListener("mouseenter", e => onHoverExperience(e));
    });
    rows.forEach((row: Element) => {
        row.addEventListener("mouseleave", () => onUnhoverExperience());
    });
</script>
<style>
    main {
        display: flex;
        flex-direction: column;
        flex: 1;
        justify-content: space-between;
    }
    table {
        width: 100%;
        border-collapse: collapse;
    }
    thead {
        border-bottom: 1px solid rgb(var(--light-gray));
        font-weight: 600;
        font-size: 18px;
        color: #e3c291;
        /*border-color: #dcc8a4*/
    }
    th, td {
        padding: 1em;
        text-align: left;
    }
    .row:hover {
        background-color: rgb(var(--gray));
    }
</style>

